KOH 1:
kohonen netowrk / self organizing map

algorytm na wykładzie

lambda = 10, 100, 1000

K = M x N
siatka wag w_ijk, gdzie k zależy od rozmiaru danych wejściowych (x1, x2, ...)
początkowe wagi z jakiegoś rozkładu

sprawdzić różne wartości K, niech C - liczba klas 
1. K<C 2. K=C 3. K>C

- iterujemy po obserwacjach
- wybieramy najbliższy neuron (odległość euklidesowa) 
	d= sqrt( (x_0-w_ij0)^2 + (x_1=w_ij1)^2 )
- przesuwamy neuron do obserwacji
	theta mówi jak mocno przyciągamy neurony

funkcja przyciągania: wziąć e^(-t/lambda) zamiast e^(-t lambda) 

szerokość sąsiedztwa r 

kolos 
3 opisowe
1 obliczeniowe np oblicz propagacje wsteczną
1 nie wiadomo